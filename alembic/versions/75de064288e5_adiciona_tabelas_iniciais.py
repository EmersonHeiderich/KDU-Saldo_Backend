"""Adiciona tabelas iniciais

Revision ID: 75de064288e5
Revises: 
Create Date: 2025-04-03 11:25:43.778254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '75de064288e5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_observations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_code', sa.Text(), nullable=False),
    sa.Column('observation', sa.Text(), nullable=False),
    sa.Column('user', sa.Text(), nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_user', sa.Text(), nullable=True),
    sa.Column('resolved_timestamp', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_observations'))
    )
    op.create_index(op.f('ix_product_observations_reference_code'), 'product_observations', ['reference_code'], unique=False)
    op.create_index(op.f('ix_product_observations_resolved'), 'product_observations', ['resolved'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('can_access_products', sa.Boolean(), nullable=False),
    sa.Column('can_access_fabrics', sa.Boolean(), nullable=False),
    sa.Column('can_access_customer_panel', sa.Boolean(), nullable=False),
    sa.Column('can_access_fiscal', sa.Boolean(), nullable=False),
    sa.Column('can_access_accounts_receivable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_permissions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_permissions'))
    )
    op.create_index(op.f('ix_user_permissions_user_id'), 'user_permissions', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_permissions_user_id'), table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_product_observations_resolved'), table_name='product_observations')
    op.drop_index(op.f('ix_product_observations_reference_code'), table_name='product_observations')
    op.drop_table('product_observations')
    # ### end Alembic commands ###
